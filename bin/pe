#!/usr/bin/env python3
import os, sys, argparse

sys.path.append(".")
from img import Package, FileWindow, SERI


def element_fn(pkg_dir, fn, metadata):
    if metadata:
        fn += ".seri"
    return "%s/%s" % (pkg_dir, fn.decode("utf8"))


parser = argparse.ArgumentParser("NLPP package manipulation script")
parser.add_argument("src_pkg", help="Source package file")

subparsers = parser.add_subparsers(title="subcommands", dest="cmd")

list_parser = subparsers.add_parser("list", help="List resources")

unpack_parser = subparsers.add_parser("unpack", help="Unpack resources")
unpack_parser.add_argument(
    "--idx", type=int, nargs="+", help="Unpack a specific resource"
)

repack_parser = subparsers.add_parser("repack", help="Repack resources")
repack_parser.add_argument(
    "--idx", type=int, nargs="+", help="Repack a specific resource"
)

parser.add_argument("--pkg_dir", help="Directory with unpacked data", default=None)
parser.add_argument("--dst_pkg", help="Destination package file", default=None)

args = parser.parse_args()

if args.pkg_dir is None:
    args.pkg_dir = args.src_pkg + "_data"
if args.dst_pkg is None:
    path, fn = os.path.split(args.src_pkg)
    args.dst_pkg = os.path.join(path, "new_" + fn)

# Parse source package
pkg = Package(FileWindow(args.src_pkg), 0)
pkg.parse(False)

if args.cmd == "list":
    for elem in pkg.entries:
        print(elem.fn)

if args.cmd == "unpack":
    if not os.path.exists(args.pkg_dir):
        os.makedirs(args.pkg_dir)

    entries = []
    if args.idx is None:
        entries = enumerate(pkg.entries)
        entries = list(entries)
    else:
        for i in args.idx:
            if i < 0 or i >= len(pkg.entries):
                print('[-] Idx "%04d" not found!' % i)
                sys.exit(1)
            if pkg.entries[i] is None:
                print('[-] Idx "%04d" is empty!' % i)
                sys.exit(2)
            entries.append((i, pkg.entries[i]))

    for k, res in entries:
        if res is None:
            continue

        res.parse()

        fn = element_fn(args.pkg_dir, res.fn, type(res) == SERI)

        print('[+] Unpacking %i: "%s"' % (k, res.fn.decode("utf8")))
        rfh = open(fn, "wb")
        rfh.write(res.parsed_for_file())
        rfh.close()

if args.cmd == "repack":
    for k, res in enumerate(pkg.entries):
        if res is None:
            continue

        fw = FileWindow(element_fn(args.pkg_dir, res.fn, type(res) == SERI))
        pkg.entries[k].fw = fw
        pkg.entries[k].unparse()

    print("[+] Writing pkg")
    nfh = open(args.dst_pkg, "wb")
    pkg.write(nfh)
    nfh.close()
